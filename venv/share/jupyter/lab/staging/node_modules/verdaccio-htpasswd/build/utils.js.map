{"version":3,"file":"utils.js","names":["_apacheMd","_interopRequireDefault","require","_bcryptjs","_crypto","_httpErrors","_core","_fileLocking","_crypt","obj","__esModule","default","DEFAULT_BCRYPT_ROUNDS","exports","lockAndRead","name","cb","readFile","lock","err","res","parseHTPasswd","input","split","reduce","result","line","args","map","str","trim","length","verifyPassword","passwd","hash","match","bcrypt","compare","indexOf","slice","crypto","createHash","update","digest","md5","crypt3","generateHtpasswdLine","user","hashConfig","algorithm","constants","HtpasswdHashAlgorithm","rounds","crypt","sha1","createError","comment","Date","toJSON","addUserToHTPasswd","body","encodeURIComponent","status","HTTP_STATUS","CONFLICT","newline","sanityCheck","password","verifyFn","users","maxUsers","Error","API_ERROR","USERNAME_PASSWORD_REQUIRED","BAD_REQUEST","REGISTRATION_DISABLED","auth","USERNAME_ALREADY_REGISTERED","UNAUTHORIZED_ACCESS","UNAUTHORIZED","Object","keys","MAX_USERS_REACHED","FORBIDDEN","changePasswordToHTPasswd","newPasswd","lines","userLineIndex","findIndex","shift","username","passwordValid","updatedUserLine","splice","join"],"sources":["../src/utils.ts"],"sourcesContent":["import md5 from 'apache-md5';\nimport bcrypt from 'bcryptjs';\nimport crypto from 'crypto';\nimport createError, { HttpError } from 'http-errors';\n\nimport { API_ERROR, HTTP_STATUS, constants } from '@verdaccio/core';\nimport { readFile } from '@verdaccio/file-locking';\nimport { Callback } from '@verdaccio/types';\n\nimport crypt3 from './crypt3';\n\nexport const DEFAULT_BCRYPT_ROUNDS = 10;\n\ntype HtpasswdHashAlgorithm = constants.HtpasswdHashAlgorithm;\n\nexport interface HtpasswdHashConfig {\n  algorithm: HtpasswdHashAlgorithm;\n  rounds?: number;\n}\n\n// this function neither unlocks file nor closes it\n// it'll have to be done manually later\nexport function lockAndRead(name: string, cb: Callback): void {\n  readFile(name, { lock: true }, (err, res) => {\n    if (err) {\n      return cb(err);\n    }\n\n    return cb(null, res);\n  });\n}\n\n/**\n * parseHTPasswd - convert htpasswd lines to object.\n * @param {string} input\n * @returns {object}\n */\nexport function parseHTPasswd(input: string): Record<string, any> {\n  // The input is split on line ending styles that are both windows and unix compatible\n  return input.split(/[\\r]?[\\n]/).reduce((result, line) => {\n    const args = line.split(':', 3).map((str) => str.trim());\n    if (args.length > 1) {\n      result[args[0]] = args[1];\n    }\n    return result;\n  }, {});\n}\n\n/**\n * verifyPassword - matches password and it's hash.\n * @param {string} passwd\n * @param {string} hash\n * @returns {Promise<boolean>}\n */\nexport async function verifyPassword(passwd: string, hash: string): Promise<boolean> {\n  if (hash.match(/^\\$2([aby])\\$/)) {\n    return await bcrypt.compare(passwd, hash);\n  } else if (hash.indexOf('{PLAIN}') === 0) {\n    return passwd === hash.slice(7);\n  } else if (hash.indexOf('{SHA}') === 0) {\n    return (\n      crypto\n        .createHash('sha1')\n        // https://nodejs.org/api/crypto.html#crypto_hash_update_data_inputencoding\n        .update(passwd, 'utf8')\n        .digest('base64') === hash.slice(5)\n    );\n  }\n  // for backwards compatibility, first check md5 then check crypt3\n  return md5(passwd, hash) === hash || crypt3(passwd, hash) === hash;\n}\n\n/**\n * generateHtpasswdLine - generates line for htpasswd file.\n * @param {string} user\n * @param {string} passwd\n * @param {HtpasswdHashConfig} hashConfig\n * @returns {string}\n */\nexport async function generateHtpasswdLine(\n  user: string,\n  passwd: string,\n  hashConfig: HtpasswdHashConfig\n): Promise<string> {\n  let hash: string;\n\n  switch (hashConfig.algorithm) {\n    case constants.HtpasswdHashAlgorithm.bcrypt:\n      hash = await bcrypt.hash(passwd, hashConfig.rounds || DEFAULT_BCRYPT_ROUNDS);\n      break;\n    case constants.HtpasswdHashAlgorithm.crypt:\n      hash = crypt3(passwd);\n      break;\n    case constants.HtpasswdHashAlgorithm.md5:\n      hash = md5(passwd);\n      break;\n    case constants.HtpasswdHashAlgorithm.sha1:\n      hash = '{SHA}' + crypto.createHash('sha1').update(passwd, 'utf8').digest('base64');\n      break;\n    default:\n      throw createError('Unexpected hash algorithm');\n  }\n\n  const comment = 'autocreated ' + new Date().toJSON();\n  return `${user}:${hash}:${comment}\\n`;\n}\n\n/**\n * addUserToHTPasswd - Generate a htpasswd format for .htpasswd\n * @param {string} body\n * @param {string} user\n * @param {string} passwd\n * @param {HtpasswdHashConfig} hashConfig\n * @returns {string}\n */\nexport async function addUserToHTPasswd(\n  body: string,\n  user: string,\n  passwd: string,\n  hashConfig: HtpasswdHashConfig\n): Promise<string> {\n  if (user !== encodeURIComponent(user)) {\n    const err = createError('username should not contain non-uri-safe characters');\n\n    err.status = HTTP_STATUS.CONFLICT;\n    throw err;\n  }\n\n  let newline = await generateHtpasswdLine(user, passwd, hashConfig);\n\n  if (body.length && body[body.length - 1] !== '\\n') {\n    newline = '\\n' + newline;\n  }\n  return body + newline;\n}\n\n/**\n * Sanity check for a user\n * @param {string} user\n * @param {object} users\n * @param {string} password\n * @param {Callback} verifyFn\n * @param {number} maxUsers\n * @returns {object}\n */\nexport async function sanityCheck(\n  user: string,\n  password: string,\n  verifyFn: Callback,\n  users: {},\n  maxUsers: number\n): Promise<HttpError | null> {\n  let err;\n\n  // check for user or password\n  if (!user || !password) {\n    err = Error(API_ERROR.USERNAME_PASSWORD_REQUIRED);\n    err.status = HTTP_STATUS.BAD_REQUEST;\n    return err;\n  }\n\n  const hash = users[user];\n\n  if (maxUsers < 0) {\n    err = Error(API_ERROR.REGISTRATION_DISABLED);\n    err.status = HTTP_STATUS.CONFLICT;\n    return err;\n  }\n\n  if (hash) {\n    const auth = await verifyFn(password, users[user]);\n    if (auth) {\n      err = Error(API_ERROR.USERNAME_ALREADY_REGISTERED);\n      err.status = HTTP_STATUS.CONFLICT;\n      return err;\n    }\n    err = Error(API_ERROR.UNAUTHORIZED_ACCESS);\n    err.status = HTTP_STATUS.UNAUTHORIZED;\n    return err;\n  } else if (Object.keys(users).length >= maxUsers) {\n    err = Error(API_ERROR.MAX_USERS_REACHED);\n    err.status = HTTP_STATUS.FORBIDDEN;\n    return err;\n  }\n\n  return null;\n}\n\n/**\n * /**\n * changePasswordToHTPasswd - change password for existing user\n * @param {string} body\n * @param {string} user\n * @param {string} passwd\n * @param {string} newPasswd\n * @param {HtpasswdHashConfig} hashConfig\n * @returns {Promise<string>}\n */\nexport async function changePasswordToHTPasswd(\n  body: string,\n  user: string,\n  passwd: string,\n  newPasswd: string,\n  hashConfig: HtpasswdHashConfig\n): Promise<string> {\n  let lines = body.split('\\n');\n  const userLineIndex = lines.findIndex((line) => line.split(':', 1).shift() === user);\n  if (userLineIndex === -1) {\n    throw new Error(`Unable to change password for user '${user}': user does not currently exist`);\n  }\n  const [username, hash] = lines[userLineIndex].split(':', 2);\n  const passwordValid = await verifyPassword(passwd, hash);\n  if (!passwordValid) {\n    throw new Error(`Unable to change password for user '${user}': invalid old password`);\n  }\n  const updatedUserLine = await generateHtpasswdLine(username, newPasswd, hashConfig);\n  lines.splice(userLineIndex, 1, updatedUserLine);\n  return lines.join('\\n');\n}\n"],"mappings":"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"}