{"version":3,"file":"htpasswd.js","names":["_debug","_interopRequireDefault","require","_fs","_path","_core","_fileLocking","_utils","obj","__esModule","default","debug","buildDebug","DEFAULT_SLOW_VERIFY_MS","exports","HTPasswd","pluginUtils","Plugin","constructor","config","options","_options$config","_options$config2","users","logger","maxUsers","max_users","Infinity","algorithm","rounds","constants","HtpasswdHashAlgorithm","bcrypt","undefined","warn","DEFAULT_BCRYPT_ROUNDS","algo","hashConfig","lastTime","file","Error","configPath","path","resolve","dirname","info","slow_verify_ms","ms","slowVerifyMs","authenticate","user","password","cb","reload","err","code","passwordValid","start","Date","verifyPassword","durationMs","getTime","message","error","adduser","realCb","pathPass","sanity","sanityCheck","lockAndRead","res","locked","unlockFile","body","toString","parseHTPasswd","_writeFile","addUserToHTPasswd","callback","fs","stat","stats","mtime","readFile","buffer","Object","keys","length","assign","_stringToUt8","authentication","writeFile","changePassword","newPassword","pathPassFile","changePasswordToHTPasswd"],"sources":["../src/htpasswd.ts"],"sourcesContent":["import buildDebug from 'debug';\nimport fs from 'fs';\nimport { dirname, resolve } from 'path';\n\nimport { constants, pluginUtils } from '@verdaccio/core';\nimport { unlockFile } from '@verdaccio/file-locking';\nimport { Callback, Logger } from '@verdaccio/types';\n\nimport {\n  DEFAULT_BCRYPT_ROUNDS,\n  HtpasswdHashConfig,\n  addUserToHTPasswd,\n  changePasswordToHTPasswd,\n  lockAndRead,\n  parseHTPasswd,\n  sanityCheck,\n  verifyPassword,\n} from './utils';\n\ntype HtpasswdHashAlgorithm = constants.HtpasswdHashAlgorithm;\n\nconst debug = buildDebug('verdaccio:plugin:htpasswd');\n\nexport type HTPasswdConfig = {\n  file: string;\n  algorithm?: HtpasswdHashAlgorithm;\n  rounds?: number;\n  max_users?: number;\n  slow_verify_ms?: number;\n};\n\nexport const DEFAULT_SLOW_VERIFY_MS = 200;\n\n/**\n * HTPasswd - Verdaccio auth class\n */\nexport default class HTPasswd\n  extends pluginUtils.Plugin<HTPasswdConfig>\n  implements pluginUtils.Auth<HTPasswdConfig>\n{\n  /**\n   *\n   * @param {*} config htpasswd file\n   * @param {object} options config.yaml in object from\n   */\n  private users: {};\n  private maxUsers: number;\n  private hashConfig: HtpasswdHashConfig;\n  private path: string;\n  private slowVerifyMs: number;\n  private logger: Logger;\n  private lastTime: any;\n  // constructor\n  public constructor(config: HTPasswdConfig, options: pluginUtils.PluginOptions) {\n    super(config, options);\n    this.users = {};\n\n    // verdaccio logger\n    this.logger = options.logger;\n\n    // all this \"verdaccio_config\" stuff is for b/w compatibility only\n    this.maxUsers = config.max_users ? config.max_users : Infinity;\n\n    let algorithm: HtpasswdHashAlgorithm;\n    let rounds: number | undefined;\n\n    if (typeof config.algorithm === 'undefined') {\n      algorithm = constants.HtpasswdHashAlgorithm.bcrypt;\n    } else if (constants.HtpasswdHashAlgorithm[config.algorithm] !== undefined) {\n      algorithm = constants.HtpasswdHashAlgorithm[config.algorithm];\n    } else {\n      this.logger.warn(\n        `The algorithm selected %s is invalid, switching to to default one \"bcrypt\", password validation can be affected`,\n        config.algorithm\n      );\n      algorithm = constants.HtpasswdHashAlgorithm.bcrypt;\n    }\n    debug(`password hash algorithm: ${algorithm}`);\n    if (algorithm === constants.HtpasswdHashAlgorithm.bcrypt) {\n      rounds = config.rounds || DEFAULT_BCRYPT_ROUNDS;\n    } else if (config.rounds !== undefined) {\n      this.logger.warn({ algo: algorithm }, 'Option \"rounds\" is not valid for \"@{algo}\" algorithm');\n    }\n\n    this.hashConfig = {\n      algorithm,\n      rounds,\n    };\n\n    this.lastTime = null;\n\n    const { file } = config;\n    debug('file: %s', file);\n    if (!file) {\n      throw new Error('should specify \"file\" in config');\n    }\n    debug('config path: %s', options?.config?.configPath);\n    this.path = resolve(dirname(options?.config?.configPath), file);\n    this.logger.info({ file: this.path }, 'using htpasswd file: @{file}');\n    debug('htpasswd path:', this.path);\n    if (config.slow_verify_ms) {\n      this.logger.info({ ms: config.slow_verify_ms }, 'slow_verify_ms enabled for @{ms}');\n    }\n    this.slowVerifyMs = config.slow_verify_ms || DEFAULT_SLOW_VERIFY_MS;\n  }\n\n  /**\n   * authenticate - Authenticate user.\n   * @param {string} user\n   * @param {string} password\n   * @param {function} cb\n   * @returns {void}\n   */\n  public authenticate(user: string, password: string, cb: Callback): void {\n    debug('authenticate %s', user);\n    this.reload(async (err) => {\n      if (err) {\n        return cb(err.code === 'ENOENT' ? null : err);\n      }\n      if (!this.users[user]) {\n        return cb(null, false);\n      }\n\n      let passwordValid = false;\n      try {\n        const start = new Date();\n        passwordValid = await verifyPassword(password, this.users[user]);\n        const durationMs = new Date().getTime() - start.getTime();\n        if (durationMs > this.slowVerifyMs) {\n          this.logger.warn(\n            { user, durationMs },\n            'Password for user \"@{user}\" took @{durationMs}ms to verify'\n          );\n        }\n      } catch ({ message }) {\n        this.logger.error({ message }, 'Unable to verify user password: @{message}');\n      }\n      if (!passwordValid) {\n        return cb(null, false);\n      }\n\n      // authentication succeeded!\n      // return all usergroups this user has access to;\n      // (this particular package has no concept of usergroups, so just return\n      // user herself)\n      return cb(null, [user]);\n    });\n  }\n\n  /**\n   * Add user\n   * 1. lock file for writing (other processes can still read)\n   * 2. reload .htpasswd\n   * 3. write new data into .htpasswd.tmp\n   * 4. move .htpasswd.tmp to .htpasswd\n   * 5. reload .htpasswd\n   * 6. unlock file\n   *\n   * @param {string} user\n   * @param {string} password\n   * @param {function} realCb\n   * @returns {Promise<any>}\n   */\n  public async adduser(user: string, password: string, realCb: Callback): Promise<any> {\n    const pathPass = this.path;\n    debug('adduser %s', user);\n    let sanity = await sanityCheck(user, password, verifyPassword, this.users, this.maxUsers);\n\n    // preliminary checks, just to ensure that file won't be reloaded if it's\n    // not needed\n    if (sanity) {\n      return realCb(sanity, false);\n    }\n\n    lockAndRead(pathPass, async (err, res): Promise<void> => {\n      let locked = false;\n\n      // callback that cleans up lock first\n      const cb = (err): void => {\n        if (locked) {\n          unlockFile(pathPass, () => {\n            // ignore any error from the unlock\n            realCb(err, !err);\n          });\n        } else {\n          realCb(err, !err);\n        }\n      };\n\n      if (!err) {\n        locked = true;\n      }\n\n      // ignore ENOENT errors, we'll just create .htpasswd in that case\n      if (err && err.code !== 'ENOENT') {\n        return cb(err);\n      }\n      const body = (res || '').toString('utf8');\n      this.users = parseHTPasswd(body);\n\n      // real checks, to prevent race conditions\n      // parsing users after reading file.\n      sanity = await sanityCheck(user, password, verifyPassword, this.users, this.maxUsers);\n\n      if (sanity) {\n        return cb(sanity);\n      }\n\n      try {\n        this._writeFile(await addUserToHTPasswd(body, user, password, this.hashConfig), cb);\n      } catch (err: any) {\n        return cb(err);\n      }\n    });\n  }\n\n  /**\n   * Reload users\n   * @param {function} callback\n   */\n  public reload(callback: Callback): void {\n    debug('reload users');\n    fs.stat(this.path, (err, stats) => {\n      if (err) {\n        return callback(err);\n      }\n      if (this.lastTime === stats.mtime) {\n        return callback();\n      }\n\n      this.lastTime = stats.mtime;\n\n      fs.readFile(this.path, 'utf8', (err, buffer) => {\n        if (err) {\n          return callback(err);\n        }\n        debug('reload users total: %s', Object.keys(this.users).length);\n        Object.assign(this.users, parseHTPasswd(buffer));\n        callback();\n      });\n    });\n  }\n\n  private _stringToUt8(authentication: string): string {\n    return (authentication || '').toString();\n  }\n\n  private _writeFile(body: string, cb: Callback): void {\n    fs.writeFile(this.path, body, (err) => {\n      if (err) {\n        cb(err);\n      } else {\n        this.reload(() => {\n          cb(null);\n        });\n      }\n    });\n  }\n\n  /**\n   * changePassword - change password for existing user.\n   * @param {string} user\n   * @param {string} password\n   * @param {string} newPassword\n   * @param {function} realCb\n   * @returns {function}\n   */\n  public changePassword(\n    user: string,\n    password: string,\n    newPassword: string,\n    realCb: Callback\n  ): void {\n    lockAndRead(this.path, async (err, res) => {\n      let locked = false;\n      const pathPassFile = this.path;\n\n      // callback that cleans up lock first\n      const cb = (err): void => {\n        if (locked) {\n          unlockFile(pathPassFile, () => {\n            // ignore any error from the unlock\n            realCb(err, !err);\n          });\n        } else {\n          realCb(err, !err);\n        }\n      };\n\n      if (!err) {\n        locked = true;\n      }\n\n      if (err && err.code !== 'ENOENT') {\n        return cb(err);\n      }\n\n      const body = this._stringToUt8(res);\n      this.users = parseHTPasswd(body);\n\n      try {\n        this._writeFile(\n          await changePasswordToHTPasswd(body, user, password, newPassword, this.hashConfig),\n          cb\n        );\n      } catch (err: any) {\n        return cb(err);\n      }\n    });\n  }\n}\n"],"mappings":"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"}