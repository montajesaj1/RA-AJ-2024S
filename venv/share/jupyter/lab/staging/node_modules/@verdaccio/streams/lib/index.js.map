{"version":3,"file":"index.js","names":["_stream","require","ReadTarball","PassThrough","constructor","options","addAbstractMethods","abort","exports","UploadTarball","done","self","name","_called_methods","__defineGetter__","__defineSetter__","fn"],"sources":["../src/index.ts"],"sourcesContent":["import { PassThrough, TransformOptions } from 'stream';\n\nexport interface IReadTarball {\n  abort?: () => void;\n}\n\nexport interface IUploadTarball {\n  done?: () => void;\n  abort?: () => void;\n}\n\n/**\n * This stream is used to read tarballs from repository.\n * @param {*} options\n * @return {Stream}\n */\nclass ReadTarball extends PassThrough implements IReadTarball {\n  /**\n   *\n   * @param {Object} options\n   */\n  public constructor(options: TransformOptions) {\n    super(options);\n    // called when data is not needed anymore\n    addAbstractMethods(this, 'abort');\n  }\n\n  public abort(): void {}\n}\n\n/**\n * This stream is used to upload tarballs to a repository.\n * @param {*} options\n * @return {Stream}\n */\nclass UploadTarball extends PassThrough implements IUploadTarball {\n  /**\n   *\n   * @param {Object} options\n   */\n  public constructor(options: any) {\n    super(options);\n    // called when user closes connection before upload finishes\n    addAbstractMethods(this, 'abort');\n\n    // called when upload finishes successfully\n    addAbstractMethods(this, 'done');\n  }\n\n  public abort(): void {}\n  public done(): void {}\n}\n\n/**\n * This function intercepts abstract calls and replays them allowing.\n * us to attach those functions after we are ready to do so\n * @param {*} self\n * @param {*} name\n */\n// Perhaps someone knows a better way to write this\nfunction addAbstractMethods(self: any, name: any): void {\n  self._called_methods = self._called_methods || {};\n\n  self.__defineGetter__(name, function() {\n    return function(): void {\n      self._called_methods[name] = true;\n    };\n  });\n\n  self.__defineSetter__(name, function(fn: any) {\n    delete self[name];\n\n    self[name] = fn;\n\n    if (self._called_methods && self._called_methods[name]) {\n      delete self._called_methods[name];\n\n      self[name]();\n    }\n  });\n}\n\nexport { ReadTarball, UploadTarball };\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAWA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,SAASC,mBAAW,CAAyB;EAC5D;AACF;AACA;AACA;EACSC,WAAWA,CAACC,OAAyB,EAAE;IAC5C,KAAK,CAACA,OAAO,CAAC;IACd;IACAC,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC;EACnC;EAEOC,KAAKA,CAAA,EAAS,CAAC;AACxB;;AAEA;AACA;AACA;AACA;AACA;AAJAC,OAAA,CAAAN,WAAA,GAAAA,WAAA;AAKA,MAAMO,aAAa,SAASN,mBAAW,CAA2B;EAChE;AACF;AACA;AACA;EACSC,WAAWA,CAACC,OAAY,EAAE;IAC/B,KAAK,CAACA,OAAO,CAAC;IACd;IACAC,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC;;IAEjC;IACAA,kBAAkB,CAAC,IAAI,EAAE,MAAM,CAAC;EAClC;EAEOC,KAAKA,CAAA,EAAS,CAAC;EACfG,IAAIA,CAAA,EAAS,CAAC;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAF,OAAA,CAAAC,aAAA,GAAAA,aAAA;AACA,SAASH,kBAAkBA,CAACK,IAAS,EAAEC,IAAS,EAAQ;EACtDD,IAAI,CAACE,eAAe,GAAGF,IAAI,CAACE,eAAe,IAAI,CAAC,CAAC;EAEjDF,IAAI,CAACG,gBAAgB,CAACF,IAAI,EAAE,YAAW;IACrC,OAAO,YAAiB;MACtBD,IAAI,CAACE,eAAe,CAACD,IAAI,CAAC,GAAG,IAAI;IACnC,CAAC;EACH,CAAC,CAAC;EAEFD,IAAI,CAACI,gBAAgB,CAACH,IAAI,EAAE,UAASI,EAAO,EAAE;IAC5C,OAAOL,IAAI,CAACC,IAAI,CAAC;IAEjBD,IAAI,CAACC,IAAI,CAAC,GAAGI,EAAE;IAEf,IAAIL,IAAI,CAACE,eAAe,IAAIF,IAAI,CAACE,eAAe,CAACD,IAAI,CAAC,EAAE;MACtD,OAAOD,IAAI,CAACE,eAAe,CAACD,IAAI,CAAC;MAEjCD,IAAI,CAACC,IAAI,CAAC,EAAE;IACd;EACF,CAAC,CAAC;AACJ"}