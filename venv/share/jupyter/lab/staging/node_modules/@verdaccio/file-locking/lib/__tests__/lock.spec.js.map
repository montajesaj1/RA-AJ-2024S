{"version":3,"file":"lock.spec.js","names":["_path","_interopRequireDefault","require","_fs","_index","obj","__esModule","default","getFilePath","filename","path","resolve","__dirname","removeTempFile","filepath","fs","unlink","error","describe","test","done","lockFile","expect","toBeNull","message","toMatch","unlockFile","readFile","data","options","parse","errorMessage","process","platform","toEqual","lock"],"sources":["../../src/__tests__/lock.spec.ts"],"sourcesContent":["import path from 'path';\nimport fs from 'fs';\n\nimport { lockFile, unlockFile, readFile } from '../index';\n\ninterface Error {\n  message: string;\n}\n\nconst getFilePath = (filename: string): string => {\n  return path.resolve(__dirname, `assets/${filename}`);\n};\n\nconst removeTempFile = (filename: string): void => {\n  const filepath = getFilePath(filename);\n  fs.unlink(filepath, error => {\n    if (error) {\n      throw error;\n    }\n  });\n};\n\ndescribe('testing locking', () => {\n  describe('lockFile', () => {\n    test('file should be found to be locked', done => {\n      lockFile(getFilePath('package.json'), (error: Error) => {\n        expect(error).toBeNull();\n        removeTempFile('package.json.lock');\n        done();\n      });\n    });\n\n    test('file should fail to be found to be locked', done => {\n      lockFile(getFilePath('package.fail.json'), (error: Error) => {\n        expect(error.message).toMatch(/ENOENT: no such file or directory, stat '(.*)package.fail.json'/);\n        done();\n      });\n    });\n  });\n\n  describe('unlockFile', () => {\n    test('file should to be found to be unLock', done => {\n      unlockFile(getFilePath('package.json.lock'), (error: Error) => {\n        expect(error).toBeNull();\n        done();\n      });\n    });\n  });\n\n  describe('readFile', () => {\n    test('read file with no options should to be found to be read it as string', done => {\n      readFile(getFilePath('package.json'), {}, (error: Error, data: string) => {\n        expect(error).toBeNull();\n        done();\n      });\n    });\n\n    test('read file with no options should to be found to be read it as object', done => {\n      const options = {\n        parse: true,\n      };\n      readFile(getFilePath('package.json'), options, (error: Error, data: string) => {\n        expect(error).toBeNull();\n        done();\n      });\n    });\n\n    test('read file with options (parse) should to be not found to be read it', done => {\n      const options = {\n        parse: true,\n      };\n      readFile(getFilePath('package.fail.json'), options, (error: Error) => {\n        expect(error.message).toMatch(/ENOENT: no such file or directory, open '(.*)package.fail.json'/);\n        done();\n      });\n    });\n\n    test('read file with options should to be found to be read it and fails to be parsed', done => {\n      const options = {\n        parse: true,\n      };\n      const errorMessage =\n        process.platform === 'win32'\n          ? 'Unexpected token } in JSON at position 47'\n          : 'Unexpected token } in JSON at position 44';\n      readFile(getFilePath('wrong.package.json'), options, (error: Error) => {\n        expect(error.message).toEqual(errorMessage);\n        done();\n      });\n    });\n\n    test('read file with  options (parse, lock) should to be found to be read it as object', done => {\n      const options = {\n        parse: true,\n        lock: true,\n      };\n      readFile(getFilePath('package2.json'), options, (error: Error, data: string) => {\n        expect(error).toBeNull();\n        removeTempFile('package2.json.lock');\n        done();\n      });\n    });\n\n    test('read file with options (parse, lock) should to be found to be read it and fails to be parsed', done => {\n      const options = {\n        parse: true,\n        lock: true,\n      };\n      const errorMessage =\n        process.platform === 'win32'\n          ? 'Unexpected token } in JSON at position 47'\n          : 'Unexpected token } in JSON at position 44';\n      readFile(getFilePath('wrong.package.json'), options, (error: Error) => {\n        expect(error.message).toEqual(errorMessage);\n        removeTempFile('wrong.package.json.lock');\n        done();\n      });\n    });\n  });\n});\n"],"mappings":"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"}