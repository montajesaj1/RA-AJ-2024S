"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
exports.loadTheme = loadTheme;
var _debug = _interopRequireDefault(require("debug"));
var _express = _interopRequireDefault(require("express"));
var _lodash = _interopRequireDefault(require("lodash"));
var _middleware = require("@verdaccio/middleware");
var _search = require("@verdaccio/search");
var _pluginLoader = _interopRequireDefault(require("../../lib/plugin-loader"));
var _api = _interopRequireDefault(require("./api"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const debug = (0, _debug.default)('verdaccio:web');
function loadTheme(config) {
  if (_lodash.default.isNil(config.theme) === false) {
    debug('loading custom ui theme');
    return _lodash.default.head((0, _pluginLoader.default)(config, config.theme, {}, function (plugin) {
      return plugin.staticPath && plugin.manifest && plugin.manifestFiles;
    }, 'verdaccio-theme'));
  }
}
var _default = async (config, auth, storage) => {
  const pluginOptions = loadTheme(config) || require('@verdaccio/ui-theme')();
  _search.SearchMemoryIndexer.configureStorage(storage);
  await _search.SearchMemoryIndexer.init();
  // eslint-disable-next-line new-cap
  const router = _express.default.Router();
  // load application
  router.use((0, _middleware.webMiddleware)(config, {
    tokenMiddleware: auth.webUIJWTmiddleware(),
    webEndpointsApi: (0, _api.default)(auth, storage, config)
  }, pluginOptions));
  return router;
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVidWciLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9leHByZXNzIiwiX2xvZGFzaCIsIl9taWRkbGV3YXJlIiwiX3NlYXJjaCIsIl9wbHVnaW5Mb2FkZXIiLCJfYXBpIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJkZWJ1ZyIsImJ1aWxkRGVidWciLCJsb2FkVGhlbWUiLCJjb25maWciLCJfIiwiaXNOaWwiLCJ0aGVtZSIsImhlYWQiLCJsb2FkUGx1Z2luIiwicGx1Z2luIiwic3RhdGljUGF0aCIsIm1hbmlmZXN0IiwibWFuaWZlc3RGaWxlcyIsIl9kZWZhdWx0IiwiYXV0aCIsInN0b3JhZ2UiLCJwbHVnaW5PcHRpb25zIiwiU2VhcmNoTWVtb3J5SW5kZXhlciIsImNvbmZpZ3VyZVN0b3JhZ2UiLCJpbml0Iiwicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInVzZSIsIndlYk1pZGRsZXdhcmUiLCJ0b2tlbk1pZGRsZXdhcmUiLCJ3ZWJVSUpXVG1pZGRsZXdhcmUiLCJ3ZWJFbmRwb2ludHNBcGkiLCJ3ZWJBcGkiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2FwaS93ZWIvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJ1aWxkRGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5pbXBvcnQgeyB3ZWJNaWRkbGV3YXJlIH0gZnJvbSAnQHZlcmRhY2Npby9taWRkbGV3YXJlJztcbmltcG9ydCB7IFNlYXJjaE1lbW9yeUluZGV4ZXIgfSBmcm9tICdAdmVyZGFjY2lvL3NlYXJjaCc7XG5cbmltcG9ydCBsb2FkUGx1Z2luIGZyb20gJy4uLy4uL2xpYi9wbHVnaW4tbG9hZGVyJztcbmltcG9ydCB3ZWJBcGkgZnJvbSAnLi9hcGknO1xuXG5jb25zdCBkZWJ1ZyA9IGJ1aWxkRGVidWcoJ3ZlcmRhY2Npbzp3ZWInKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRUaGVtZShjb25maWcpIHtcbiAgaWYgKF8uaXNOaWwoY29uZmlnLnRoZW1lKSA9PT0gZmFsc2UpIHtcbiAgICBkZWJ1ZygnbG9hZGluZyBjdXN0b20gdWkgdGhlbWUnKTtcbiAgICByZXR1cm4gXy5oZWFkKFxuICAgICAgbG9hZFBsdWdpbihcbiAgICAgICAgY29uZmlnLFxuICAgICAgICBjb25maWcudGhlbWUsXG4gICAgICAgIHt9LFxuICAgICAgICBmdW5jdGlvbiAocGx1Z2luKSB7XG4gICAgICAgICAgcmV0dXJuIHBsdWdpbi5zdGF0aWNQYXRoICYmIHBsdWdpbi5tYW5pZmVzdCAmJiBwbHVnaW4ubWFuaWZlc3RGaWxlcztcbiAgICAgICAgfSxcbiAgICAgICAgJ3ZlcmRhY2Npby10aGVtZSdcbiAgICAgIClcbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIChjb25maWcsIGF1dGgsIHN0b3JhZ2UpID0+IHtcbiAgY29uc3QgcGx1Z2luT3B0aW9ucyA9IGxvYWRUaGVtZShjb25maWcpIHx8IHJlcXVpcmUoJ0B2ZXJkYWNjaW8vdWktdGhlbWUnKSgpO1xuICBTZWFyY2hNZW1vcnlJbmRleGVyLmNvbmZpZ3VyZVN0b3JhZ2Uoc3RvcmFnZSk7XG4gIGF3YWl0IFNlYXJjaE1lbW9yeUluZGV4ZXIuaW5pdCgpO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbmV3LWNhcFxuICBjb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuICAvLyBsb2FkIGFwcGxpY2F0aW9uXG4gIHJvdXRlci51c2UoXG4gICAgd2ViTWlkZGxld2FyZShcbiAgICAgIGNvbmZpZyxcbiAgICAgIHtcbiAgICAgICAgdG9rZW5NaWRkbGV3YXJlOiBhdXRoLndlYlVJSldUbWlkZGxld2FyZSgpLFxuICAgICAgICB3ZWJFbmRwb2ludHNBcGk6IHdlYkFwaShhdXRoLCBzdG9yYWdlLCBjb25maWcpLFxuICAgICAgfSxcbiAgICAgIHBsdWdpbk9wdGlvbnNcbiAgICApXG4gICk7XG4gIHJldHVybiByb3V0ZXI7XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsUUFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUUsT0FBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQUcsV0FBQSxHQUFBSCxPQUFBO0FBQ0EsSUFBQUksT0FBQSxHQUFBSixPQUFBO0FBRUEsSUFBQUssYUFBQSxHQUFBTixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQU0sSUFBQSxHQUFBUCxzQkFBQSxDQUFBQyxPQUFBO0FBQTJCLFNBQUFELHVCQUFBUSxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsS0FBQUUsT0FBQSxFQUFBRixHQUFBO0FBRTNCLE1BQU1HLEtBQUssR0FBRyxJQUFBQyxjQUFVLEVBQUMsZUFBZSxDQUFDO0FBRWxDLFNBQVNDLFNBQVNBLENBQUNDLE1BQU0sRUFBRTtFQUNoQyxJQUFJQyxlQUFDLENBQUNDLEtBQUssQ0FBQ0YsTUFBTSxDQUFDRyxLQUFLLENBQUMsS0FBSyxLQUFLLEVBQUU7SUFDbkNOLEtBQUssQ0FBQyx5QkFBeUIsQ0FBQztJQUNoQyxPQUFPSSxlQUFDLENBQUNHLElBQUksQ0FDWCxJQUFBQyxxQkFBVSxFQUNSTCxNQUFNLEVBQ05BLE1BQU0sQ0FBQ0csS0FBSyxFQUNaLENBQUMsQ0FBQyxFQUNGLFVBQVVHLE1BQU0sRUFBRTtNQUNoQixPQUFPQSxNQUFNLENBQUNDLFVBQVUsSUFBSUQsTUFBTSxDQUFDRSxRQUFRLElBQUlGLE1BQU0sQ0FBQ0csYUFBYTtJQUNyRSxDQUFDLEVBQ0QsaUJBQ0YsQ0FDRixDQUFDO0VBQ0g7QUFDRjtBQUFDLElBQUFDLFFBQUEsR0FFYyxNQUFBQSxDQUFPVixNQUFNLEVBQUVXLElBQUksRUFBRUMsT0FBTyxLQUFLO0VBQzlDLE1BQU1DLGFBQWEsR0FBR2QsU0FBUyxDQUFDQyxNQUFNLENBQUMsSUFBSWIsT0FBTyxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQztFQUMzRTJCLDJCQUFtQixDQUFDQyxnQkFBZ0IsQ0FBQ0gsT0FBTyxDQUFDO0VBQzdDLE1BQU1FLDJCQUFtQixDQUFDRSxJQUFJLENBQUMsQ0FBQztFQUNoQztFQUNBLE1BQU1DLE1BQU0sR0FBR0MsZ0JBQU8sQ0FBQ0MsTUFBTSxDQUFDLENBQUM7RUFDL0I7RUFDQUYsTUFBTSxDQUFDRyxHQUFHLENBQ1IsSUFBQUMseUJBQWEsRUFDWHJCLE1BQU0sRUFDTjtJQUNFc0IsZUFBZSxFQUFFWCxJQUFJLENBQUNZLGtCQUFrQixDQUFDLENBQUM7SUFDMUNDLGVBQWUsRUFBRSxJQUFBQyxZQUFNLEVBQUNkLElBQUksRUFBRUMsT0FBTyxFQUFFWixNQUFNO0VBQy9DLENBQUMsRUFDRGEsYUFDRixDQUNGLENBQUM7RUFDRCxPQUFPSSxNQUFNO0FBQ2YsQ0FBQztBQUFBUyxPQUFBLENBQUE5QixPQUFBLEdBQUFjLFFBQUEifQ==