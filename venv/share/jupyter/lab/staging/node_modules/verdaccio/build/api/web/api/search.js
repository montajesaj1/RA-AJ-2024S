"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _express = require("express");
var _search = require("@verdaccio/search");
var _constants = require("../../../lib/constants");
function addSearchWebApi(storage, auth) {
  const route = (0, _express.Router)(); /* eslint new-cap: 0 */
  // Search package
  route.get('/search/:anything', async function (req, _res, next) {
    const term = req.params.anything;
    const indexer = await _search.SearchMemoryIndexer.query(term);
    const packages = [];
    const results = indexer.hits;
    const getPackageInfo = function (i) {
      storage.getPackage({
        name: results[i].id,
        uplinksLook: false,
        callback: (err, entry) => {
          if (!err && entry) {
            auth.allow_access({
              packageName: entry.name
            }, req.remote_user, function (err, allowed) {
              if (err || !allowed) {
                return;
              }
              packages.push(entry.versions[entry[_constants.DIST_TAGS].latest]);
            });
          }
          if (i >= results.length - 1) {
            next(packages);
          } else {
            getPackageInfo(i + 1);
          }
        }
      });
    };
    if (results.length) {
      getPackageInfo(0);
    } else {
      next([]);
    }
  });
  return route;
}
var _default = addSearchWebApi;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsInJlcXVpcmUiLCJfc2VhcmNoIiwiX2NvbnN0YW50cyIsImFkZFNlYXJjaFdlYkFwaSIsInN0b3JhZ2UiLCJhdXRoIiwicm91dGUiLCJSb3V0ZXIiLCJnZXQiLCJyZXEiLCJfcmVzIiwibmV4dCIsInRlcm0iLCJwYXJhbXMiLCJhbnl0aGluZyIsImluZGV4ZXIiLCJTZWFyY2hNZW1vcnlJbmRleGVyIiwicXVlcnkiLCJwYWNrYWdlcyIsInJlc3VsdHMiLCJoaXRzIiwiZ2V0UGFja2FnZUluZm8iLCJpIiwiZ2V0UGFja2FnZSIsIm5hbWUiLCJpZCIsInVwbGlua3NMb29rIiwiY2FsbGJhY2siLCJlcnIiLCJlbnRyeSIsImFsbG93X2FjY2VzcyIsInBhY2thZ2VOYW1lIiwicmVtb3RlX3VzZXIiLCJhbGxvd2VkIiwicHVzaCIsInZlcnNpb25zIiwiRElTVF9UQUdTIiwibGF0ZXN0IiwibGVuZ3RoIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hcGkvd2ViL2FwaS9zZWFyY2gudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XG5cbmltcG9ydCB7IFNlYXJjaE1lbW9yeUluZGV4ZXIgfSBmcm9tICdAdmVyZGFjY2lvL3NlYXJjaCc7XG5pbXBvcnQgeyBNYW5pZmVzdCB9IGZyb20gJ0B2ZXJkYWNjaW8vdHlwZXMnO1xuXG5pbXBvcnQgQXV0aCBmcm9tICcuLi8uLi8uLi9saWIvYXV0aCc7XG5pbXBvcnQgeyBESVNUX1RBR1MgfSBmcm9tICcuLi8uLi8uLi9saWIvY29uc3RhbnRzJztcbmltcG9ydCBTdG9yYWdlIGZyb20gJy4uLy4uLy4uL2xpYi9zdG9yYWdlJztcbmltcG9ydCB7ICROZXh0RnVuY3Rpb25WZXIsICRSZXF1ZXN0RXh0ZW5kLCAkUmVzcG9uc2VFeHRlbmQgfSBmcm9tICcuLi8uLi8uLi90eXBlcyc7XG5cbmZ1bmN0aW9uIGFkZFNlYXJjaFdlYkFwaShzdG9yYWdlOiBTdG9yYWdlLCBhdXRoOiBBdXRoKTogUm91dGVyIHtcbiAgY29uc3Qgcm91dGUgPSBSb3V0ZXIoKTsgLyogZXNsaW50IG5ldy1jYXA6IDAgKi9cbiAgLy8gU2VhcmNoIHBhY2thZ2VcbiAgcm91dGUuZ2V0KFxuICAgICcvc2VhcmNoLzphbnl0aGluZycsXG4gICAgYXN5bmMgZnVuY3Rpb24gKFxuICAgICAgcmVxOiAkUmVxdWVzdEV4dGVuZCxcbiAgICAgIF9yZXM6ICRSZXNwb25zZUV4dGVuZCxcbiAgICAgIG5leHQ6ICROZXh0RnVuY3Rpb25WZXJcbiAgICApOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgIGNvbnN0IHRlcm0gPSByZXEucGFyYW1zLmFueXRoaW5nO1xuICAgICAgY29uc3QgaW5kZXhlciA9IChhd2FpdCBTZWFyY2hNZW1vcnlJbmRleGVyLnF1ZXJ5KHRlcm0pKSBhcyBhbnk7XG4gICAgICBjb25zdCBwYWNrYWdlczogYW55W10gPSBbXTtcbiAgICAgIGNvbnN0IHJlc3VsdHMgPSBpbmRleGVyLmhpdHM7XG5cbiAgICAgIGNvbnN0IGdldFBhY2thZ2VJbmZvID0gZnVuY3Rpb24gKGkpOiB2b2lkIHtcbiAgICAgICAgc3RvcmFnZS5nZXRQYWNrYWdlKHtcbiAgICAgICAgICBuYW1lOiByZXN1bHRzW2ldLmlkLFxuICAgICAgICAgIHVwbGlua3NMb29rOiBmYWxzZSxcbiAgICAgICAgICBjYWxsYmFjazogKGVyciwgZW50cnk6IE1hbmlmZXN0KTogdm9pZCA9PiB7XG4gICAgICAgICAgICBpZiAoIWVyciAmJiBlbnRyeSkge1xuICAgICAgICAgICAgICBhdXRoLmFsbG93X2FjY2VzcyhcbiAgICAgICAgICAgICAgICB7IHBhY2thZ2VOYW1lOiBlbnRyeS5uYW1lIH0sXG4gICAgICAgICAgICAgICAgcmVxLnJlbW90ZV91c2VyLFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChlcnIsIGFsbG93ZWQpOiB2b2lkIHtcbiAgICAgICAgICAgICAgICAgIGlmIChlcnIgfHwgIWFsbG93ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBwYWNrYWdlcy5wdXNoKGVudHJ5LnZlcnNpb25zW2VudHJ5W0RJU1RfVEFHU10ubGF0ZXN0XSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoaSA+PSByZXN1bHRzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgICAgbmV4dChwYWNrYWdlcyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBnZXRQYWNrYWdlSW5mbyhpICsgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICB9O1xuXG4gICAgICBpZiAocmVzdWx0cy5sZW5ndGgpIHtcbiAgICAgICAgZ2V0UGFja2FnZUluZm8oMCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0KFtdKTtcbiAgICAgIH1cbiAgICB9XG4gICk7XG5cbiAgcmV0dXJuIHJvdXRlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBhZGRTZWFyY2hXZWJBcGk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLFFBQUEsR0FBQUMsT0FBQTtBQUVBLElBQUFDLE9BQUEsR0FBQUQsT0FBQTtBQUlBLElBQUFFLFVBQUEsR0FBQUYsT0FBQTtBQUlBLFNBQVNHLGVBQWVBLENBQUNDLE9BQWdCLEVBQUVDLElBQVUsRUFBVTtFQUM3RCxNQUFNQyxLQUFLLEdBQUcsSUFBQUMsZUFBTSxFQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ3hCO0VBQ0FELEtBQUssQ0FBQ0UsR0FBRyxDQUNQLG1CQUFtQixFQUNuQixnQkFDRUMsR0FBbUIsRUFDbkJDLElBQXFCLEVBQ3JCQyxJQUFzQixFQUNQO0lBQ2YsTUFBTUMsSUFBSSxHQUFHSCxHQUFHLENBQUNJLE1BQU0sQ0FBQ0MsUUFBUTtJQUNoQyxNQUFNQyxPQUFPLEdBQUksTUFBTUMsMkJBQW1CLENBQUNDLEtBQUssQ0FBQ0wsSUFBSSxDQUFTO0lBQzlELE1BQU1NLFFBQWUsR0FBRyxFQUFFO0lBQzFCLE1BQU1DLE9BQU8sR0FBR0osT0FBTyxDQUFDSyxJQUFJO0lBRTVCLE1BQU1DLGNBQWMsR0FBRyxTQUFBQSxDQUFVQyxDQUFDLEVBQVE7TUFDeENsQixPQUFPLENBQUNtQixVQUFVLENBQUM7UUFDakJDLElBQUksRUFBRUwsT0FBTyxDQUFDRyxDQUFDLENBQUMsQ0FBQ0csRUFBRTtRQUNuQkMsV0FBVyxFQUFFLEtBQUs7UUFDbEJDLFFBQVEsRUFBRUEsQ0FBQ0MsR0FBRyxFQUFFQyxLQUFlLEtBQVc7VUFDeEMsSUFBSSxDQUFDRCxHQUFHLElBQUlDLEtBQUssRUFBRTtZQUNqQnhCLElBQUksQ0FBQ3lCLFlBQVksQ0FDZjtjQUFFQyxXQUFXLEVBQUVGLEtBQUssQ0FBQ0w7WUFBSyxDQUFDLEVBQzNCZixHQUFHLENBQUN1QixXQUFXLEVBQ2YsVUFBVUosR0FBRyxFQUFFSyxPQUFPLEVBQVE7Y0FDNUIsSUFBSUwsR0FBRyxJQUFJLENBQUNLLE9BQU8sRUFBRTtnQkFDbkI7Y0FDRjtjQUVBZixRQUFRLENBQUNnQixJQUFJLENBQUNMLEtBQUssQ0FBQ00sUUFBUSxDQUFDTixLQUFLLENBQUNPLG9CQUFTLENBQUMsQ0FBQ0MsTUFBTSxDQUFDLENBQUM7WUFDeEQsQ0FDRixDQUFDO1VBQ0g7VUFFQSxJQUFJZixDQUFDLElBQUlILE9BQU8sQ0FBQ21CLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDM0IzQixJQUFJLENBQUNPLFFBQVEsQ0FBQztVQUNoQixDQUFDLE1BQU07WUFDTEcsY0FBYyxDQUFDQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1VBQ3ZCO1FBQ0Y7TUFDRixDQUFDLENBQUM7SUFDSixDQUFDO0lBRUQsSUFBSUgsT0FBTyxDQUFDbUIsTUFBTSxFQUFFO01BQ2xCakIsY0FBYyxDQUFDLENBQUMsQ0FBQztJQUNuQixDQUFDLE1BQU07TUFDTFYsSUFBSSxDQUFDLEVBQUUsQ0FBQztJQUNWO0VBQ0YsQ0FDRixDQUFDO0VBRUQsT0FBT0wsS0FBSztBQUNkO0FBQUMsSUFBQWlDLFFBQUEsR0FFY3BDLGVBQWU7QUFBQXFDLE9BQUEsQ0FBQUMsT0FBQSxHQUFBRixRQUFBIn0=