import type { Container } from '@microsoft/fast-foundation';
import type { Accordion } from './accordion/index.js';
import type { Anchor } from './anchor/index.js';
import type { AnchoredRegion } from './anchored-region/index.js';
import type { Badge } from './badge/index.js';
import type { Breadcrumb } from './breadcrumb/index.js';
import type { Button } from './button/index.js';
import type { Card } from './card/index.js';
import type { DataGrid, DataGridCell, DataGridRow } from './data-grid/index.js';
import type { DesignSystemProvider } from './design-system-provider/index.js';
import type { Dialog } from './dialog/index.js';
import type { Disclosure } from './disclosure/index.js';
import type { Divider } from './divider/index.js';
import type { Listbox } from './listbox/index.js';
import type { Menu } from './menu/index.js';
import type { Option } from './option/index.js';
import type { RadioGroup } from './radio-group/index.js';
import type { Search } from './search/index.js';
import type { Skeleton } from './skeleton/index.js';
import type { SliderLabel } from './slider-label/index.js';
import type { TabPanel } from './tab-panel/index.js';
import type { Tab } from './tab/index.js';
import type { Tabs } from './tabs/index.js';
import type { TextArea } from './text-area/index.js';
import type { TextField } from './text-field/index.js';
import type { Toolbar } from './toolbar/index.js';
import type { Tooltip } from './tooltip/index.js';
import type { TreeView } from './tree-view/index.js';
import type { Picker } from './drafts/picker/index.js';
/**
 * Export all custom element definitions
 */
import { jpAccordion } from './accordion/index.js';
import { jpAccordionItem } from './accordion-item/index.js';
import { jpAnchor } from './anchor/index.js';
import { jpAnchoredRegion } from './anchored-region/index.js';
import { jpAvatar } from './avatar/index.js';
import { jpBadge } from './badge/index.js';
import { jpBreadcrumb } from './breadcrumb/index.js';
import { jpBreadcrumbItem } from './breadcrumb-item/index.js';
import { jpButton } from './button/index.js';
import { jpCard } from './card/index.js';
import { jpCheckbox } from './checkbox/index.js';
import { jpCombobox } from './combobox/index.js';
import { jpDataGrid, jpDataGridCell, jpDataGridRow } from './data-grid/index.js';
import { jpDateField } from './date-field/index.js';
import { jpDesignSystemProvider } from './design-system-provider/index.js';
/**
 * Don't remove. This is needed to prevent api-extractor errors.
 */
import { jpDialog } from './dialog/index.js';
import { jpDisclosure } from './disclosure/index.js';
import { jpDivider } from './divider/index.js';
import { jpListbox } from './listbox/index.js';
import { jpMenu } from './menu/index.js';
import { jpMenuItem } from './menu-item/index.js';
import { jpNumberField } from './number-field/index.js';
import { jpOption } from './option/index.js';
import { jpProgress } from './progress/index.js';
import { jpProgressRing } from './progress-ring/index.js';
import { jpRadio } from './radio/index.js';
import { jpRadioGroup } from './radio-group/index.js';
import { jpSearch } from './search/index.js';
import { jpSelect } from './select/index.js';
import { jpSkeleton } from './skeleton/index.js';
import { jpSlider } from './slider/index.js';
import { jpSliderLabel } from './slider-label/index.js';
import { jpSwitch } from './switch/index.js';
import { jpTabPanel } from './tab-panel/index.js';
import { jpTab } from './tab/index.js';
import { jpTabs } from './tabs/index.js';
import { jpTextArea } from './text-area/index.js';
import { jpTextField } from './text-field/index.js';
import { jpToolbar } from './toolbar/index.js';
import { jpTooltip } from './tooltip/index.js';
import { jpTreeItem } from './tree-item/index.js';
import { jpTreeView } from './tree-view/index.js';
import { jpPicker, jpPickerList, jpPickerListItem, jpPickerMenu, jpPickerMenuOption } from './drafts/picker/index.js';
export { jpAccordion, jpAccordionItem, jpAnchor, jpAnchoredRegion, jpAvatar, jpBadge, jpBreadcrumb, jpBreadcrumbItem, jpButton, jpCard, jpCheckbox, jpCombobox, jpDataGrid, jpDataGridCell, jpDataGridRow, jpDateField, jpDesignSystemProvider, jpDialog, jpDisclosure, jpDivider, jpListbox, jpMenu, jpMenuItem, jpNumberField, jpOption, jpPicker, jpPickerList, jpPickerListItem, jpPickerMenu, jpPickerMenuOption, jpProgress, jpProgressRing, jpRadio, jpRadioGroup, jpSearch, jpSelect, jpSkeleton, jpSlider, jpSliderLabel, jpSwitch, jpTab, jpTabPanel, jpTabs, jpTextArea, jpTextField, jpToolbar, jpTooltip, jpTreeItem, jpTreeView };
/**
 * All Jupyter Web Components
 * @public
 * @remarks
 * This object can be passed directly to the Design System's `register` method to
 * statically link and register all available components.
 */
export declare const allComponents: {
    jpAccordion: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Accordion, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Accordion, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof Accordion>;
    jpAccordionItem: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").AccordionItemOptions> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").AccordionItemOptions, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpAnchor: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").Anchor;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").Anchor, any>, import("@microsoft/fast-foundation").AnchorOptions>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles, import("@microsoft/fast-foundation").AnchorOptions>;
        shadowOptions: {
            delegatesFocus: true;
        };
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").Anchor;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").Anchor, any>, import("@microsoft/fast-foundation").AnchorOptions>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles, import("@microsoft/fast-foundation").AnchorOptions>;
        shadowOptions: {
            delegatesFocus: true;
        };
    }, typeof Anchor>;
    jpAnchoredRegion: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<AnchoredRegion, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<AnchoredRegion, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof AnchoredRegion>;
    jpAvatar: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").AvatarOptions> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").AvatarOptions, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpBadge: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Badge, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Badge, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof Badge>;
    jpBreadcrumb: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Breadcrumb, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Breadcrumb, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof Breadcrumb>;
    jpBreadcrumbItem: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").BreadcrumbItemOptions> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").BreadcrumbItemOptions, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpButton: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").FoundationElementDefinition> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").FoundationElementDefinition, typeof Button>;
    jpCard: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").Card;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").Card, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").Card;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").Card, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof Card>;
    jpCheckbox: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").CheckboxOptions> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").CheckboxOptions, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpCombobox: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").ComboboxOptions> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").ComboboxOptions, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpDataGrid: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<DataGrid, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<DataGrid, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof DataGrid>;
    jpDataGridCell: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<DataGridCell, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<DataGridCell, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof DataGridCell>;
    jpDataGridRow: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<DataGridRow, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<DataGridRow, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof DataGridRow>;
    jpDateField: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("./date-field/date-field.js").DateFieldOptions> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("./date-field/date-field.js").DateFieldOptions, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpDesignSystemProvider: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").FoundationElementDefinition> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").FoundationElementDefinition, typeof DesignSystemProvider>;
    jpDialog: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Dialog, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Dialog, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof Dialog>;
    jpDisclosure: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").Disclosure;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").Disclosure, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").Disclosure;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").Disclosure, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof Disclosure>;
    jpDivider: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Divider, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Divider, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof Divider>;
    jpListbox: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").ListboxElement;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").ListboxElement, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").ListboxElement;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").ListboxElement, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof Listbox>;
    jpMenu: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").Menu, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").Menu, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof Menu>;
    jpMenuItem: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").MenuItemOptions> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").MenuItemOptions, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpNumberField: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").NumberFieldOptions> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").NumberFieldOptions, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpOption: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Option, any>, import("@microsoft/fast-foundation").ListboxOptionOptions>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles, import("@microsoft/fast-foundation").ListboxOptionOptions>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Option, any>, import("@microsoft/fast-foundation").ListboxOptionOptions>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles, import("@microsoft/fast-foundation").ListboxOptionOptions>;
    }, typeof Option>;
    jpPicker: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Picker, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
        shadowOptions: {};
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Picker, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
        shadowOptions: {};
    }, typeof Picker>;
    jpPickerList: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").PickerList, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").PickerList, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof import("@microsoft/fast-foundation").PickerList>;
    jpPickerListItem: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").PickerListItem, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").PickerListItem, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof import("@microsoft/fast-foundation").PickerListItem>;
    jpPickerMenu: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").FoundationElementDefinition> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").FoundationElementDefinition, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpPickerMenuOption: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").PickerMenuOption, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").PickerMenuOption, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof import("@microsoft/fast-foundation").PickerMenuOption>;
    jpProgress: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").ProgressOptions> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").ProgressOptions, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpProgressRing: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").ProgressRingOptions> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").ProgressRingOptions, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpRadio: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").RadioOptions> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").RadioOptions, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpRadioGroup: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").RadioGroup;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").RadioGroup, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").RadioGroup;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").RadioGroup, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof RadioGroup>;
    jpSearch: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").Search;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").Search, any>, import("@microsoft/fast-foundation").SearchOptions>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles, import("@microsoft/fast-foundation").TextFieldOptions>;
        shadowOptions: {
            delegatesFocus: true;
        };
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").Search;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").Search, any>, import("@microsoft/fast-foundation").SearchOptions>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles, import("@microsoft/fast-foundation").TextFieldOptions>;
        shadowOptions: {
            delegatesFocus: true;
        };
    }, typeof Search>;
    jpSelect: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").SelectOptions> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").SelectOptions, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpSkeleton: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Skeleton, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Skeleton, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof Skeleton>;
    jpSlider: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").SliderOptions> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").SliderOptions, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpSliderLabel: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").SliderLabel;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").SliderLabel, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").SliderLabel;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").SliderLabel, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof SliderLabel>;
    jpSwitch: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").SwitchOptions> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").SwitchOptions, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpTab: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Tab, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Tab, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof Tab>;
    jpTabPanel: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<TabPanel, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<TabPanel, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof TabPanel>;
    jpTabs: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Tabs, any>, import("@microsoft/fast-foundation").TabsOptions>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles, import("@microsoft/fast-foundation").TabsOptions>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<Tabs, any>, import("@microsoft/fast-foundation").TabsOptions>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles, import("@microsoft/fast-foundation").TabsOptions>;
    }, typeof Tabs>;
    jpTextArea: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").TextArea;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").TextArea, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
        shadowOptions: {
            delegatesFocus: true;
        };
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").TextArea;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").TextArea, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
        shadowOptions: {
            delegatesFocus: true;
        };
    }, typeof TextArea>;
    jpTextField: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").TextField;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").TextField, any>, import("@microsoft/fast-foundation").TextFieldOptions>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles, import("@microsoft/fast-foundation").TextFieldOptions>;
        shadowOptions: {
            delegatesFocus: true;
        };
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        baseClass: typeof import("@microsoft/fast-foundation").TextField;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").TextField, any>, import("@microsoft/fast-foundation").TextFieldOptions>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles, import("@microsoft/fast-foundation").TextFieldOptions>;
        shadowOptions: {
            delegatesFocus: true;
        };
    }, typeof TextField>;
    jpToolbar: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        baseClass: typeof import("./toolbar/index.js").FoundationToolbar;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").Toolbar, any>, import("@microsoft/fast-foundation").ToolbarOptions>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles, import("@microsoft/fast-foundation").ToolbarOptions>;
        shadowOptions: {
            delegatesFocus: true;
        };
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        baseClass: typeof import("./toolbar/index.js").FoundationToolbar;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<import("@microsoft/fast-foundation").Toolbar, any>, import("@microsoft/fast-foundation").ToolbarOptions>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles, import("@microsoft/fast-foundation").ToolbarOptions>;
        shadowOptions: {
            delegatesFocus: true;
        };
    }, typeof Toolbar>;
    jpTooltip: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").FoundationElementDefinition> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").FoundationElementDefinition, typeof Tooltip>;
    jpTreeItem: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<import("@microsoft/fast-foundation").TreeItemOptions> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<import("@microsoft/fast-foundation").TreeItemOptions, import("@microsoft/fast-element").Constructable<import("@microsoft/fast-foundation").FoundationElement>>;
    jpTreeView: (overrideDefinition?: import("@microsoft/fast-foundation").OverrideFoundationElementDefinition<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<TreeView, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }> | undefined) => import("@microsoft/fast-foundation").FoundationElementRegistry<{
        baseName: string;
        template: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ViewTemplate<TreeView, any>, import("@microsoft/fast-foundation").FoundationElementDefinition>;
        styles: import("@microsoft/fast-foundation").FoundationElementTemplate<import("@microsoft/fast-element").ElementStyles>;
    }, typeof TreeView>;
    register(container?: Container, ...rest: any[]): void;
};
