import { type ISessionContext, IWidgetTracker } from '@jupyterlab/apputils';
import type { CodeCell } from '@jupyterlab/cells';
import { Token } from '@lumino/coreutils';
import { ConsolePanel } from './panel';
/**
 * The console tracker token.
 */
export declare const IConsoleTracker: Token<IConsoleTracker>;
/**
 * A class that tracks console widgets.
 */
export interface IConsoleTracker extends IWidgetTracker<ConsolePanel> {
}
/**
 * Console cell executor namespace
 */
export declare namespace IConsoleCellExecutor {
    /**
     * Execution options for console cell executor.
     */
    interface IRunCellOptions {
        /**
         * Cell to execute
         */
        cell: CodeCell;
        /**
         * A callback to notify a cell completed execution.
         */
        onCellExecuted: (args: {
            cell: CodeCell;
            executionDate: Date;
            success: boolean;
            error?: Error | null;
        }) => void;
        /**
         * Document session context
         */
        sessionContext: ISessionContext;
    }
}
/**
 * Console cell executor interface
 */
export interface IConsoleCellExecutor {
    /**
     * Execute a cell.
     *
     * @param options Cell execution options
     */
    runCell(options: IConsoleCellExecutor.IRunCellOptions): Promise<boolean>;
}
/**
 * The Console cell executor token.
 */
export declare const IConsoleCellExecutor: Token<IConsoleCellExecutor>;
