import { EditorState, Transaction } from '@codemirror/state';
/**
 * CodeMirror commands namespace
 */
export declare namespace StateCommands {
    /**
     * Indent or insert a tab as appropriate.
     */
    function indentMoreOrInsertTab(target: {
        dom: HTMLElement;
        state: EditorState;
        dispatch: (transaction: Transaction) => void;
    }): boolean;
    /**
     * Insert new line if completer is not active.
     */
    function completerOrInsertNewLine(target: {
        dom: HTMLElement;
        state: EditorState;
        dispatch: (transaction: Transaction) => void;
    }): boolean;
    /**
     * Prevent insertion of new line when running cell with Ctrl/Command + Enter
     * @deprecated
     */
    function preventNewLineOnRun(target: {
        dom: HTMLElement;
    }): boolean;
    /**
     * Insert a new line or run a cell with Ctrl/Command + Enter
     */
    function insertBlankLineOnRun(target: {
        dom: HTMLElement;
        state: EditorState;
        dispatch: (transaction: Transaction) => void;
    }): boolean;
    /**
     * Simplify selection but do not prevent default to allow switching to command mode.
     */
    function simplifySelectionAndMaybeSwitchToCommandMode(target: {
        dom: HTMLElement;
        state: EditorState;
        dispatch: (transaction: Transaction) => void;
    }): boolean;
    /**
     * Prevent dedenting when launching inspection request (a.k.a tooltip).
     *
     * This function should be removed once a better way to prevent default
     * CodeMirror commands is implemented, as tracked in
     * https://github.com/jupyterlab/jupyterlab/issues/15897
     */
    function dedentIfNotLaunchingTooltip(target: {
        dom: HTMLElement;
        state: EditorState;
        dispatch: (transaction: Transaction) => void;
    }): boolean;
}
