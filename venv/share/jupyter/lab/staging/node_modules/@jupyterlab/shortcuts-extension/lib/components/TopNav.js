/*
 * Copyright (c) Jupyter Development Team.
 * Distributed under the terms of the Modified BSD License.
 */
import { FilterBox } from '@jupyterlab/ui-components';
import * as React from 'react';
import { ShortcutTitleItem } from './ShortcutTitleItem';
function Symbols(props) {
    return (React.createElement("div", { className: "jp-Shortcuts-Symbols" },
        React.createElement("table", null,
            React.createElement("tbody", null,
                React.createElement("tr", null,
                    React.createElement("td", null,
                        React.createElement("kbd", null, "Cmd")),
                    React.createElement("td", null, "\u2318"),
                    React.createElement("td", null,
                        React.createElement("kbd", null, "Ctrl")),
                    React.createElement("td", null, "\u2303")),
                React.createElement("tr", null,
                    React.createElement("td", null,
                        React.createElement("kbd", null, "Alt")),
                    React.createElement("td", null, "\u2325"),
                    React.createElement("td", null,
                        React.createElement("kbd", null, "Shift")),
                    React.createElement("td", null, "\u21E7"))))));
}
function AdvancedOptions(props) {
    const trans = props.translator.load('jupyterlab');
    return (React.createElement("div", { className: "jp-Shortcuts-AdvancedOptions" },
        React.createElement("a", { className: "jp-Shortcuts-AdvancedOptionsLink", onClick: () => props.toggleSelectors() }, props.showSelectors
            ? trans.__('Hide Selectors')
            : trans.__('Show Selectors')),
        React.createElement("a", { className: "jp-Shortcuts-AdvancedOptionsLink", onClick: () => props.resetShortcuts() }, trans.__('Reset All'))));
}
/** React component for top navigation */
export class TopNav extends React.Component {
    constructor(props) {
        super(props);
    }
    getShortCutTitleItem(title, columnId) {
        return (React.createElement("div", { className: "jp-Shortcuts-Cell" },
            React.createElement(ShortcutTitleItem, { title: title, updateSort: this.props.updateSort, active: this.props.currentSort, columnId: columnId })));
    }
    render() {
        const trans = this.props.translator.load('jupyterlab');
        return (React.createElement("div", { className: "jp-Shortcuts-Top" },
            React.createElement("div", { className: "jp-Shortcuts-TopNav" },
                React.createElement(Symbols, null),
                React.createElement(FilterBox, { "aria-label": trans.__('Search shortcuts'), updateFilter: (_, query) => this.props.updateSearchQuery(query !== null && query !== void 0 ? query : ''), placeholder: trans.__('Searchâ€¦'), useFuzzyFilter: false }),
                React.createElement(AdvancedOptions, { toggleSelectors: this.props.toggleSelectors, showSelectors: this.props.showSelectors, resetShortcuts: this.props.resetShortcuts, translator: this.props.translator })),
            React.createElement("div", { className: "jp-Shortcuts-HeaderRowContainer" },
                React.createElement("div", { className: "jp-Shortcuts-HeaderRow" },
                    this.getShortCutTitleItem(trans.__('Category'), 'category'),
                    this.getShortCutTitleItem(trans.__('Command'), 'command'),
                    React.createElement("div", { className: "jp-Shortcuts-Cell" },
                        React.createElement("div", { className: "title-div" }, trans.__('Shortcut'))),
                    this.getShortCutTitleItem(trans.__('Source'), 'source'),
                    this.props.showSelectors &&
                        this.getShortCutTitleItem(trans.__('Selectors'), 'selector')))));
    }
}
//# sourceMappingURL=TopNav.js.map