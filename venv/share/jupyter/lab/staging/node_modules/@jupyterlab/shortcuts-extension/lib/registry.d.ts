import { ISettingRegistry } from '@jupyterlab/settingregistry';
import { CommandRegistry } from '@lumino/commands';
import { IShortcutRegistry, IShortcutsSettingsLayout, IShortcutTarget } from './types';
/**
 * Shortcut registry used by Shortcut UI component.
 */
export declare class ShortcutRegistry extends Map<string, IShortcutTarget> implements IShortcutRegistry {
    constructor(options: ShortcutRegistry.IOptions);
    /**
     * Find targets that would conflict with given keys chord under given sequence.
     */
    findConflictsFor(keys: string[], selector: string): IShortcutTarget[];
    private _computeTargetId;
    private _computeKeybindingId;
}
/**
 * Interfaces for ShortcutRegistry class.
 */
export declare namespace ShortcutRegistry {
    /**
     * Initialization options for ShortcutRegistry
     */
    interface IOptions {
        /**
         * Read-only command registry.
         */
        commandRegistry: Omit<CommandRegistry, 'execute'>;
        /**
         * Shortcut settings
         */
        settings: ISettingRegistry.ISettings<IShortcutsSettingsLayout>;
    }
}
